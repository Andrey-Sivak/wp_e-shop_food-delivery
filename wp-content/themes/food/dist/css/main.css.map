{"version":3,"sources":["base/_reset.scss","abstracts/_mixins.scss","base/_typography.scss","base/_base.scss","abstracts/_variables.scss","components/_form.scss"],"names":[],"mappings":"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","file":"main.css","sourcesContent":["body,\r\np,\r\nul, li,\r\nh1, h2, h3, h4, h5, h6,\r\ninput,\r\ntextarea,\r\na {\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style-type: none;\r\n  border: none;\r\n  text-decoration: none;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n}","@mixin response-to ( $breakpoint ) {\r\n  @if( map-has-key( $breakpoints, $breakpoint ) ) {\r\n    @media( max-width: #{map-get( $breakpoints, $breakpoint ) } ) {\r\n      @content;\r\n    }\r\n  }\r\n\r\n  @else {\r\n    @warn 'Unfortunately, no value could be retrieved from `#{$breakpoint}` . ' +\r\n      'Please make sure it is defined in `$breakpoints` map.';\r\n  }\r\n}\r\n\r\n@mixin font-face($path, $family, $type: null, $extension: null, $style: null) {\r\n  // font-weight values map\r\n  $font-weights: (\r\n          'Thin': 100,\r\n          'Extra-Light': 200,\r\n          'Light': 300,\r\n          'Regular': 400,\r\n          'Medium': 500,\r\n          'Simi-Bold': 600,\r\n          'Bold': 700,\r\n          'Extra-Bold': 800,\r\n          'Black': 900,\r\n          'Extra-Black': 950\r\n  );\r\n\r\n  @font-face {\r\n    font-family: $family;\r\n    font-display: swap;\r\n\r\n    // set font-weight property\r\n    @if $type {\r\n      @each $weight-name, $weight-value in $font-weights {\r\n        @if $type == $weight-name {\r\n          font-weight: $weight-value;\r\n        }\r\n      }\r\n    } @else {\r\n      font-weight: 400;\r\n    }\r\n\r\n    // check font extension and font-type and then set src property\r\n    @if $extension and $type {\r\n      src: url('#{$path}/#{$family}-#{$type}.#{$extension}') format('truetype');\r\n    } @else if $extension or $type {\r\n      @if $type {\r\n        src: url('#{$path}/#{$family}-#{$type}.ttf') format('truetype');\r\n      } @else if $extension {\r\n        src: url('#{$path}/#{$family}.#{$extension}') format('truetype');\r\n      }\r\n    } @else {\r\n      src: url('#{$path}/#{$family}.ttf');\r\n    }\r\n\r\n    // set font-style property\r\n    @if $style {\r\n      font-style: $style;\r\n    } @else {\r\n      font-style: normal;\r\n    }\r\n\r\n  }\r\n}\r\n\r\n@mixin flex( $direction: row, $j-c: flex-start, $a-i: flex-start, $flex-wrap: wrap ) {\r\n  display: flex;\r\n  flex-direction: $direction;\r\n  justify-content: $j-c;\r\n  align-items: $a-i;\r\n  flex-wrap: $flex-wrap;\r\n}\r\n\r\n@mixin flex-center( $direction: row, $flex-wrap: wrap) {\r\n  @include flex( $direction, center, center, $flex-wrap );\r\n}\r\n\r\n@mixin on-event {\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin message-tint( $color, $background-color: null ) {\r\n  color: $color;\r\n\r\n  @if ( type_of( $color ) == 'color' ) {\r\n    background-color: lighten( $color, 30% );\r\n  } @else {\r\n    @warn 'Parameter $color for message mixin should be a color.';\r\n  }\r\n}\r\n\r\n@mixin pos-absolute( $top: null, $right: null, $bottom: null, $left: null ) {\r\n  position: absolute;\r\n  top: $top;\r\n  right: $right;\r\n  bottom: $bottom;\r\n  left: $left;\r\n}\r\n\r\n@mixin transition-ease {\r\n  transition: all ease-in-out .3s;\r\n}\r\n","$cuprum: 'Cuprum';\r\n\r\n$dir: '../fonts';\r\n\r\n@include font-face( $dir, $cuprum, 'Regular' );\r\n@include font-face( $dir, $cuprum, 'Bold' );\r\n@include font-face( $dir, $cuprum, 'BoldItalic', 'ttf', italic );\r\n@include font-face( $dir, $cuprum, 'Italic', 'ttf', italic );","body {\r\n  font-family: $roboto;\r\n}\r\n\r\n.container {\r\n  max-width: $container;\r\n  margin: 0 auto;\r\n\r\n  @include response-to(large) {\r\n    padding-left: 15px;\r\n    padding-right: 15px;\r\n  }\r\n}\r\n","$breakpoints: (\r\n        small: 767px,\r\n        medium: 992px,\r\n        large: 1182px,\r\n        huge: 1540px\r\n);\r\n\r\n$pink-color: #FE6A6A;\r\n\r\n$roboto: 'Roboto', sans-serif;\r\n$roboto-slab: 'Roboto Slab', serif;\r\n\r\n$container: 1170px;\r\n",".add-form {\r\n  max-width: 410px;\r\n  width: 100%;\r\n\r\n  @include response-to(small) {\r\n    margin-bottom: 35px;\r\n  }\r\n\r\n  &__title {\r\n    font-size: 24px;\r\n    font-weight: 500;\r\n    margin-bottom: 80px;\r\n    text-align: center;\r\n\r\n    @include response-to(small) {\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n\r\n  &__wrap {\r\n    border: 1px solid #000000;\r\n    border-radius: 5px;\r\n    padding: 30px 25px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &__formgroup {\r\n    position: relative;\r\n    width: 100%;\r\n\r\n    &:not(:last-of-type) {\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    & label {\r\n      font-size: 18px;\r\n      font-weight: 500;\r\n      left: 16px;\r\n    }\r\n\r\n    & textarea {\r\n      min-height: 102px;\r\n      resize: vertical;\r\n      font-family: $roboto;\r\n    }\r\n\r\n    & span.error {\r\n      position: absolute;\r\n      bottom: 100%;\r\n      color: red;\r\n      font-size: 12px;\r\n      left: 0;\r\n    }\r\n  }\r\n\r\n  &__input {\r\n    width: 100%;\r\n    background: #C4C4C4;\r\n    border-radius: 5px;\r\n    padding: 11px 16px;\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n\r\n    &::placeholder {\r\n      font-size: 18px;\r\n      font-weight: 500;\r\n      font-family: $roboto;\r\n    }\r\n\r\n    &.error {\r\n      border: 1px solid red;\r\n    }\r\n  }\r\n\r\n  &__btn {\r\n    width: 100%;\r\n    display: block;\r\n    text-align: center;\r\n    background: #C4C4C4;\r\n    border-radius: 5px;\r\n    padding: 9px 0;\r\n    font-weight: bold;\r\n    font-size: 24px;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n}\r\n\r\n.settings {\r\n\r\n  &__form {\r\n    max-width: 452px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n\r\n    @include response-to(small) {\r\n      width: 90%;\r\n    }\r\n\r\n    &_title {\r\n      font-weight: 500;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    &group {\r\n      margin-bottom: 20px;\r\n      width: 100%;\r\n      position: relative;\r\n\r\n      & input {\r\n        display: block;\r\n        width: 100%;\r\n        padding: 18px 20px;\r\n        border: 1px solid #000;\r\n        border-radius: 5px;\r\n        font-size: 24px;\r\n        font-weight: 500;\r\n\r\n        @include response-to(small) {\r\n          font-size: 18px;\r\n        }\r\n      }\r\n\r\n      & label {\r\n        left: 20px;\r\n      }\r\n    }\r\n\r\n    & button {\r\n      background: #E2E2E2;\r\n      border-radius: 5px;\r\n      display: block;\r\n      width: 100%;\r\n      cursor: pointer;\r\n      text-align: center;\r\n      font-size: 24px;\r\n      padding: 18px 0;\r\n      border: none;\r\n      font-weight: 500;\r\n      @include transition-ease;\r\n      margin-bottom: 20px;\r\n\r\n      @include on-event {\r\n        background: darken(#E2E2E2, 10);\r\n      }\r\n\r\n      @include response-to(small) {\r\n        font-size: 18px;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\ninput,\r\ntextarea {\r\n\r\n  &::placeholder {\r\n    color: rgba(0, 0, 0, 0.5);\r\n    font-family: $roboto;\r\n  }\r\n\r\n  &:focus::placeholder {\r\n    color: transparent;\r\n  }\r\n\r\n  &:focus + label {\r\n    opacity: 1;\r\n    z-index: 2;\r\n    font-size: 10px;\r\n    top: 1px;\r\n    transform: unset;\r\n  }\r\n}\r\n\r\nlabel {\r\n  position: absolute;\r\n  z-index: -2;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  opacity: 0;\r\n}\r\n\r\n"]}